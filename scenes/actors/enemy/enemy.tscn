[gd_scene load_steps=13 format=2]

[ext_resource path="res://scenes/actors/enemy/enemy.gd" type="Script" id=1]
[ext_resource path="res://library/common/DetectBox.tscn" type="PackedScene" id=2]
[ext_resource path="res://library/common/HurtBox.tscn" type="PackedScene" id=3]
[ext_resource path="res://library/common/HitBox.tscn" type="PackedScene" id=4]
[ext_resource path="res://scenes/actors/shared/behaviors/BehaviorController.tscn" type="PackedScene" id=5]
[ext_resource path="res://scenes/actors/shared/behaviors/Teleport.tscn" type="PackedScene" id=6]

[sub_resource type="Shader" id=2]
code = "shader_type canvas_item;

// 振動の強さ
uniform float shake_power = 0.03;
// 振動率
uniform float shake_rate : hint_range( 0.0, 1.0 ) = 0.2;
// 振動速度
uniform float shake_speed = 5.0;
// 振動ブロックサイズ
uniform float shake_block_size = 30.5;
// 色の分離率
uniform float shake_color_rate : hint_range( 0.0, 1.0 ) = 0.01;

uniform bool Smooth = true;
uniform float width : hint_range(0.0, 16) = 1.0;
uniform vec4 outline_color : hint_color = vec4(0.0, 0.0, 0.0, 1.0);
uniform int pixel_size : hint_range(1, 10) = 4;

uniform vec4 flash_color : hint_color = vec4(1.0);
uniform float flash_modifier : hint_range(0.0, 1.0) = 0.0;

float random( float seed )
{
	return fract( 543.2543 * sin( dot( vec2( seed, seed ), vec2( 3525.46, -54.3415 ) ) ) );
}

void fragment( )
{
//	vec4 color = texture(TEXTURE, UV);
//	color.rgb = mix(color.rgb, flash_color.rgb, flash_modifier);
	
	float enable_shift = float(
		random( trunc( TIME * shake_speed ) )
	<	shake_rate
	);

	vec2 fixed_uv = UV;
	fixed_uv.x += (
		random(
			( trunc( UV.y * shake_block_size ) / shake_block_size )
		+	TIME
		) - 0.5
	) * shake_power * enable_shift;

	vec4 pixel_color = textureLod( TEXTURE, fixed_uv, 0.0 );
	pixel_color.r = mix(
		pixel_color.r
	,	textureLod( TEXTURE, fixed_uv + vec2( shake_color_rate, 0.0 ), 0.0 ).r
	,	enable_shift
	);
	pixel_color.b = mix(
		pixel_color.b
	,	textureLod( TEXTURE, fixed_uv + vec2( -shake_color_rate, 0.0 ), 0.0 ).b
	,	enable_shift
	);

	vec2 unit = (1.0/float(pixel_size) ) / vec2(textureSize(TEXTURE, 0));
	if (pixel_color.a == 0.0) {
		pixel_color = outline_color;
		pixel_color.a = 0.0;
		for (float x = -ceil(width); x <= ceil(width); x++) {
			for (float y = -ceil(width); y <= ceil(width); y++) {
				if (texture(TEXTURE, UV + vec2(x*unit.x, y*unit.y)).a == 0.0 || (x==0.0 && y==0.0)) {
					continue;
				}
				if (Smooth) {
					pixel_color.a += outline_color.a / (pow(x,2)+pow(y,2)) * (1.0-pow(2.0, -width));
					if (pixel_color.a > 1.0) {
						pixel_color.a = 1.0;
					}
				} else {
					pixel_color.a = outline_color.a;
					return
				}
			}
		}
	}
	
	if(flash_modifier > 0.0){
		pixel_color.rbg = mix(pixel_color.rgb, flash_color.rgb, flash_modifier);
	}
	
	
	
	
	COLOR = pixel_color;
}"

[sub_resource type="ShaderMaterial" id=1]
shader = SubResource( 2 )
shader_param/shake_power = 0.01
shader_param/shake_rate = 0.0
shader_param/shake_speed = 5.0
shader_param/shake_block_size = 32.5
shader_param/shake_color_rate = 0.01
shader_param/Smooth = true
shader_param/width = 0.2
shader_param/outline_color = Color( 0, 1, 0.976471, 1 )
shader_param/pixel_size = 1
shader_param/flash_color = Color( 1, 1, 1, 1 )
shader_param/flash_modifier = 1.0

[sub_resource type="Animation" id=4]
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite:material:shader_param/flash_modifier")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 1.0 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Sprite:frame")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 0 ]
}

[sub_resource type="Animation" id=5]
resource_name = "HitFlash"
length = 0.4
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite:material:shader_param/flash_modifier")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3, 0.4 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1 ),
"update": 0,
"values": [ 0.0, 1.0, 0.0, 1.0, 0.0 ]
}
tracks/1/type = "method"
tracks/1/path = NodePath("..")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0.4 ),
"transitions": PoolRealArray( 1 ),
"values": [ {
"args": [  ],
"method": "hit_flash_end"
} ]
}

[sub_resource type="Animation" id=7]
resource_name = "OuterGlow"
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite:material:shader_param/width")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.5, 1 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ 0.2, 1.5, 0.2 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Sprite:material:shader_param/flash_modifier")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 0.0 ]
}

[sub_resource type="Animation" id=6]
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite:material:shader_param/flash_modifier")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 1.0 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Sprite:material:shader_param/width")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 0.2 ]
}

[node name="Enemy" type="KinematicBody2D" groups=["enemy"]]
collision_layer = 4
script = ExtResource( 1 )
SPEED = 100
JUMP_HEIGHT = -64

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]

[node name="eye" type="Area2D" parent="."]
position = Vector2( 0, -64 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="eye"]
position = Vector2( 480, -128 )

[node name="outofrange" type="Timer" parent="."]
one_shot = true

[node name="jumpcasts" type="Node2D" parent="."]
position = Vector2( 0, -64 )

[node name="jumpcast" type="RayCast2D" parent="jumpcasts"]
position = Vector2( 35, 118 )
enabled = true
cast_to = Vector2( 64, 0 )

[node name="jumpmax" type="RayCast2D" parent="jumpcasts"]
position = Vector2( 35, 0 )
enabled = true
cast_to = Vector2( 64, 0 )

[node name="sight" type="RayCast2D" parent="."]
enabled = true
cast_to = Vector2( 0, 0 )
collision_mask = 3

[node name="VisibilityNotifier2D" type="VisibilityNotifier2D" parent="."]
position = Vector2( 2.67029e-05, -1.52588e-05 )
scale = Vector2( 47.7479, 37.7154 )

[node name="idletimer" type="Timer" parent="."]
one_shot = true

[node name="OldSprite" type="Sprite" parent="."]
__meta__ = {
"_editor_description_": ""
}

[node name="DetectBox" parent="." instance=ExtResource( 2 )]

[node name="Area" parent="DetectBox" index="0"]
collision_layer = 0
collision_mask = 4

[node name="Shape" parent="DetectBox/Area" index="0"]
position = Vector2( 0, -15 )

[node name="Sprite" type="Node2D" parent="."]

[node name="Sprite" type="Sprite" parent="Sprite"]
material = SubResource( 1 )
position = Vector2( 0, -15 )

[node name="SpritePlayer" type="AnimationPlayer" parent="Sprite"]
anims/RESET = SubResource( 4 )

[node name="EffectPlayer" type="AnimationPlayer" parent="Sprite"]
anims/HitFlash = SubResource( 5 )
anims/OuterGlow = SubResource( 7 )
anims/RESET = SubResource( 6 )

[node name="confused" type="Timer" parent="."]
wait_time = 0.5
one_shot = true

[node name="CenterPoint" type="Position2D" parent="."]

[node name="HitBox" parent="." instance=ExtResource( 4 )]

[node name="Area" parent="HitBox" index="0"]
collision_layer = 0
collision_mask = 2

[node name="HurtBox" parent="." instance=ExtResource( 3 )]

[node name="Area" parent="HurtBox" index="0"]
collision_layer = 4
collision_mask = 0

[node name="StunTimer" type="Timer" parent="."]
wait_time = 0.5
one_shot = true

[node name="AttackTimer" type="Timer" parent="."]

[node name="BehaviorController" parent="." instance=ExtResource( 5 )]

[node name="Teleport" parent="BehaviorController" instance=ExtResource( 6 )]

[node name="Heal" type="Node" parent="BehaviorController"]

[node name="EnergyTimer" type="Timer" parent="."]
autostart = true

[connection signal="timeout" from="outofrange" to="." method="_on_outofrange_timeout"]
[connection signal="screen_entered" from="VisibilityNotifier2D" to="." method="_on_VisibilityNotifier2D_screen_entered"]
[connection signal="screen_exited" from="VisibilityNotifier2D" to="." method="_on_VisibilityNotifier2D_screen_exited"]
[connection signal="timeout" from="idletimer" to="." method="_on_idletimer_timeout"]
[connection signal="no_targets_remain" from="DetectBox" to="." method="_on_DetectBox_no_targets_remain"]
[connection signal="target_detected" from="DetectBox" to="." method="_on_DetectBox_target_detected"]
[connection signal="animation_finished" from="Sprite/SpritePlayer" to="." method="_on_SpritePlayer_animation_finished"]
[connection signal="animation_finished" from="Sprite/EffectPlayer" to="." method="_on_EffectPlayer_animation_finished"]
[connection signal="timeout" from="confused" to="." method="_on_confused_timeout"]
[connection signal="is_dead" from="HurtBox" to="." method="_on_HurtBox_is_dead"]
[connection signal="took_damage" from="HurtBox" to="." method="_on_HurtBox_took_damage"]
[connection signal="took_damage" from="HurtBox" to="BehaviorController" method="_on_hit"]
[connection signal="timeout" from="StunTimer" to="." method="_on_StunTimer_timeout"]
[connection signal="timeout" from="AttackTimer" to="." method="_on_AttackTimer_timeout"]
[connection signal="timeout" from="EnergyTimer" to="." method="_on_EnergyTimer_timeout"]

[editable path="DetectBox"]
[editable path="HitBox"]
[editable path="HurtBox"]
